const functions = require('firebase-functions');

const runtimeOpts = {
    timeoutSeconds: 300,
    memory: '512MB',
};

const region = 'asia-south1';

// creates the http endpoint to be used for SSR.
// the actual SSR server is generated by sveltekit and transformed by 
// sveltkit-firebase-adaptor into the ./ssrServer directory.
// in firebase config (firebase.json) this function is set as the rewrites
// function.
// all calls to hosting is redirected to this function and this function
// returns the prerendered html to the browser.
let ssrServerServer;
exports.ssrServer = functions.region(region).runWith(runtimeOpts).
        https.onRequest(async (request, response) => {
    console.log(request);
    if (!ssrServerServer) {
        functions.logger.info('Initialising SvelteKit SSR entry');
        ssrServerServer = require('./ssrServer/index').default;
        functions.logger.info('SvelteKit SSR entry initialised!');
    }
    functions.logger.info('Requested resource: ' + request.originalUrl);
    return ssrServerServer(request, response);
});

// create a new automatically translated post
exports.add_post = require('./api/index').add_post;
// handle request for user name/email/role by a super admin
exports.admin_get_user = require('./api/index').admin_get_user;
// change the user role of a user by a super admin
exports.admin_change_role = require('./api/index').admin_change_role;
// toggle the varified status of a post by an admin or super admin
exports.admin_toggle_verified = require('./api/index').admin_toggle_verified;
// add comment to post
exports.add_comment = require('./api/index').add_comment;
// delete comment from post
exports.delete_comment = require('./api/index').delete_comment;
// deliver images with firebase hosting rewrites
exports.images = require('./api/index').images;